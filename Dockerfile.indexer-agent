########################################################################
# Build image

FROM node:16.13.1-slim as build

ENV NODE_ENV production

RUN apt-get update && apt-get install -y python build-essential git curl

# Install Rust
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > /tmp/rustup.sh && sh /tmp/rustup.sh -y
ENV PATH="/root/.cargo/bin:$PATH"

WORKDIR /opt/indexer

# Copy root files
COPY package.json .
COPY yarn.lock .
COPY tsconfig.json .
COPY lerna.json .

# Copy shared and package files
COPY packages/indexer-common/ ./packages/indexer-common
COPY packages/indexer-agent/ ./packages/indexer-agent

# Install dependencies; include dev dependencies
RUN yarn --frozen-lockfile --non-interactive --production=false

########################################################################
# Runtime image

FROM node:16.13.1-slim

ENV NODE_ENV production

RUN apt-get update && apt-get install -y python build-essential git curl

# Install Rust
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > /tmp/rustup.sh && sh /tmp/rustup.sh -y
ENV PATH="/root/.cargo/bin:$PATH"

WORKDIR /opt/indexer

# Copy root files
COPY package.json .
COPY yarn.lock .
COPY tsconfig.json .
COPY lerna.json .

# Copy build output
COPY --from=build /opt/indexer/packages/indexer-common/package.json /opt/indexer/packages/indexer-common/package.json
COPY --from=build /opt/indexer/packages/indexer-common/dist /opt/indexer/packages/indexer-common/dist
COPY --from=build /opt/indexer/packages/indexer-agent/package.json /opt/indexer/packages/indexer-agent/package.json
COPY --from=build /opt/indexer/packages/indexer-agent/dist /opt/indexer/packages/indexer-agent/dist

# Install dependencies; exclude dev dependencies
RUN yarn --frozen-lockfile --non-interactive

ENV ETHEREUM ""

# Run the indexer-agent
WORKDIR /opt/indexer/packages/indexer-agent
ENTRYPOINT ["node", "dist/index.js", "start"]
